# GNU Make workspace makefile autogenerated by Premake

ifndef config
  config=debug_windows
endif

ifndef verbose
  SILENT = @
endif

ifeq ($(config),debug_windows)
  init_config = debug_windows
  testing_config = debug_windows
  run_config = debug_windows
  test_config = debug_windows
  gdb_config = debug_windows
  lldb_config = debug_windows

else ifeq ($(config),debug_linux)
  init_config = debug_linux
  testing_config = debug_linux
  run_config = debug_linux
  test_config = debug_linux
  gdb_config = debug_linux
  lldb_config = debug_linux

else ifeq ($(config),release_windows)
  init_config = release_windows
  testing_config = release_windows
  run_config = release_windows
  test_config = release_windows
  gdb_config = release_windows
  lldb_config = release_windows

else ifeq ($(config),release_linux)
  init_config = release_linux
  testing_config = release_linux
  run_config = release_linux
  test_config = release_linux
  gdb_config = release_linux
  lldb_config = release_linux

else
  $(error "invalid configuration $(config)")
endif

PROJECTS := init testing run test gdb lldb

.PHONY: all clean help $(PROJECTS) 

all: $(PROJECTS)

init:
ifneq (,$(init_config))
	@echo "==== Building init ($(init_config)) ===="
	@${MAKE} --no-print-directory -C . -f init.make config=$(init_config)
endif

testing:
ifneq (,$(testing_config))
	@echo "==== Building testing ($(testing_config)) ===="
	@${MAKE} --no-print-directory -C . -f testing.make config=$(testing_config)
endif

run:
ifneq (,$(run_config))
	@echo "==== Building run ($(run_config)) ===="
	@${MAKE} --no-print-directory -C . -f run.make config=$(run_config)
endif

test: init testing run
ifneq (,$(test_config))
	@echo "==== Building test ($(test_config)) ===="
	@${MAKE} --no-print-directory -C . -f test.make config=$(test_config)
endif

gdb: init testing
ifneq (,$(gdb_config))
	@echo "==== Building gdb ($(gdb_config)) ===="
	@${MAKE} --no-print-directory -C . -f gdb.make config=$(gdb_config)
endif

lldb: init testing
ifneq (,$(lldb_config))
	@echo "==== Building lldb ($(lldb_config)) ===="
	@${MAKE} --no-print-directory -C . -f lldb.make config=$(lldb_config)
endif

clean:
	@${MAKE} --no-print-directory -C . -f init.make clean
	@${MAKE} --no-print-directory -C . -f testing.make clean
	@${MAKE} --no-print-directory -C . -f run.make clean
	@${MAKE} --no-print-directory -C . -f test.make clean
	@${MAKE} --no-print-directory -C . -f gdb.make clean
	@${MAKE} --no-print-directory -C . -f lldb.make clean

help:
	@echo "Usage: make [config=name] [target]"
	@echo ""
	@echo "CONFIGURATIONS:"
	@echo "  debug_windows"
	@echo "  debug_linux"
	@echo "  release_windows"
	@echo "  release_linux"
	@echo ""
	@echo "TARGETS:"
	@echo "   all (default)"
	@echo "   clean"
	@echo "   init"
	@echo "   testing"
	@echo "   run"
	@echo "   test"
	@echo "   gdb"
	@echo "   lldb"
	@echo ""
	@echo "For more information, see https://github.com/premake/premake-core/wiki"