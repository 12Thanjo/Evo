# Alternative GNU Make project makefile autogenerated by Premake

ifndef config
  config=debug_windows
endif

ifndef verbose
  SILENT = @
endif

.PHONY: clean prebuild

ifeq ($(config),debug_windows)
TARGETDIR = bin/Windows/Debug
TARGET = $(TARGETDIR)/init
  define BUILDCMDS
	@echo Running build commands
	mkdir -p ./build/Windows/Debug/bin/
	mkdir -p ./build/Windows/Debug/obj/init
  endef
  define CLEANCMDS
	@echo Running clean commands
	rm -rf ./build/
	@echo "\"Clean testing\" may have an error - don't worry, its fine (it seems to be a bug in the genation from premake5)"
	@echo
  endef

else ifeq ($(config),debug_linux)
TARGETDIR = bin/Linux/Debug
TARGET = $(TARGETDIR)/init
  define BUILDCMDS
	@echo Running build commands
	mkdir -p ./build/Linux/Debug/bin/
	mkdir -p ./build/Linux/Debug/obj/init
  endef
  define CLEANCMDS
	@echo Running clean commands
	rm -rf ./build/
	@echo "\"Clean testing\" may have an error - don't worry, its fine (it seems to be a bug in the genation from premake5)"
	@echo
  endef

else ifeq ($(config),release_windows)
TARGETDIR = bin/Windows/Release
TARGET = $(TARGETDIR)/init
  define BUILDCMDS
	@echo Running build commands
	mkdir -p ./build/Windows/Release/bin/
	mkdir -p ./build/Windows/Release/obj/init
  endef
  define CLEANCMDS
	@echo Running clean commands
	rm -rf ./build/
	@echo "\"Clean testing\" may have an error - don't worry, its fine (it seems to be a bug in the genation from premake5)"
	@echo
  endef

else ifeq ($(config),release_linux)
TARGETDIR = bin/Linux/Release
TARGET = $(TARGETDIR)/init
  define BUILDCMDS
	@echo Running build commands
	mkdir -p ./build/Linux/Release/bin/
	mkdir -p ./build/Linux/Release/obj/init
  endef
  define CLEANCMDS
	@echo Running clean commands
	rm -rf ./build/
	@echo "\"Clean testing\" may have an error - don't worry, its fine (it seems to be a bug in the genation from premake5)"
	@echo
  endef

else
  $(error "invalid configuration $(config)")
endif

$(TARGET):
	$(BUILDCMDS)

clean:
	$(CLEANCMDS)
